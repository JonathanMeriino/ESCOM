
"""PSO.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tqRwPYkgXS7Lnze2UaVUTxENUyy_Nix5
"""


"""Inicializaci√≥n de particulas"""


import numpy as np
from tabulate import  tabulate

#crear particulas

particulas=[]
for i in range(20):
    vectores=np.random.uniform(-5.00,5.00,size=2)
    print('particulas',i,vectores)
    particulas.append(vectores)


#print(pbest)

"""Suma de X,Y"""

def ofP(particulas):
  of=[]
  for x,y in particulas:
    a=x**2+y**2
    of.append(a)
  
  return of


no_iteracion=[]
for iteracion in range(50):
  
  no_par=[]
  ig_best=[]
  vg_best=[]
  fg_best=[]
  pbest=np.copy(particulas)
  of_particulas=ofP(particulas)
  
  """Encontrar el menor valor
  
  """

  of_gbest=of_particulas[0]
  #print(menor)
  for n in range(len(of_particulas)):
    if of_particulas[n]<of_gbest:
      of_gbest=of_particulas[n]
      index_gbest=n
 
  gbest=[]
  gbest.append(particulas[index_gbest][0])
  gbest.append(particulas[index_gbest][1])
  
  no_iteracion.append(iteracion)
  """Velocidades Actualizadas"""
  if iteracion==0:
    v=np.zeros((20,2))
  else:
    v=nueva_v
  nueva_v=np.zeros((20,2))
  for i in range(20):
    no_par.append(i+1)
  for i in pbest:
    vg_best.append(i)
  c1=0.7
  c2=1
  w=0.8

  for h in range(20):
    for l in range(2):
      r_t=np.random.uniform(0,1,size=2)
      #print(r_t) #valores de r1yr2
      #l=gbest[l]
      #print(l)
      nueva_v[h][l]=w*v[h][l]+c1*r_t[0]*(pbest[h][l]-particulas[h][l])+c2*r_t[1]*(gbest[l]-particulas[h][l])


  """Particulas actualizadas"""

  p_new=np.add(particulas,nueva_v)

  ofp_new=ofP(p_new)

  """comparacion 
  
  """

  for  i in range(20):
    if ofp_new[i]<of_particulas[i]:
      particulas[i]=p_new[i]
      
  pbest=np.copy(particulas)
  for i in pbest:
    ig_best.append(i)
  
  of_particulas = ofP(particulas)
  for i in of_particulas:
    fg_best.append(i)
  """Encontrar el menor valor

  """

  tab={
    'no_par':no_par,
      'valocidad de gbest': vg_best,
      'gbest':ig_best,
      'f':fg_best
        
  }

  print(tabulate(tab,headers=['no.particula','particulas','pbest','funcion']))


